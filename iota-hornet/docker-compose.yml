version: '3'
services:

  hornet:
    image: iotaledger/hornet:${HORNET_VERSION:?HORNET_VERSION is missing}
    container_name: iota-hornet
    restart: unless-stopped
    ulimits:
      nofile:
        soft: 16384
        hard: 16384
    stop_grace_period: 5m
    tty: true
    working_dir: /app
    ports:
      - "${HORNET_GOSSIP_PORT:-15600}:${HORNET_GOSSIP_PORT:-15600}/tcp"
      - "${HORNET_AUTOPEERING_PORT:-14626}:${HORNET_AUTOPEERING_PORT:-14626}/udp"
    labels:
      - "proxy.constraint=hornet-${HORNET_NETWORK:-mainnet}"
      - "traefik.enable=true"

      - "traefik.http.services.hornet.loadbalancer.server.port=8081"
      - "traefik.http.services.hornet.loadbalancer.healthCheck.path=/dashboard"
      - "traefik.http.services.hornet.loadbalancer.healthCheck.interval=10s"
      - "traefik.http.services.hornet.loadbalancer.healthCheck.timeout=3s"
      - "traefik.http.routers.hornet.service=hornet"
      - "traefik.http.routers.hornet.rule=Host(`${HORNET_HOST:?HORNET_HOST is missing}`)"
      - "traefik.http.routers.hornet.entrypoints=websecure"
      - "traefik.http.routers.hornet.tls=true"
      - "traefik.http.routers.hornet.tls.certresolver=myresolver"

      - "traefik.http.routers.hornet.middlewares=security-headers"
      - "traefik.http.middlewares.security-headers.headers.accesscontrolallowmethods=GET,POST,PUT,DELETE,OPTIONS"
      - "traefik.http.middlewares.security-headers.headers.customResponseHeaders.Access-Control-Allow-Origin=https://${HORNET_HOST:?HORNET_HOST is missing}:${HORNET_HTTPS_PORT:-443}"
      - "traefik.http.middlewares.security-headers.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.security-headers.headers.addvaryheader=true"
      - "traefik.http.middlewares.security-headers.headers.frameDeny=true"
      - "traefik.http.middlewares.security-headers.headers.contentTypeNosniff=true"

      - "traefik.http.services.webapi.loadbalancer.server.port=14265"
      - "traefik.http.services.webapi.loadbalancer.healthCheck.path=/api/v1/info"
      - "traefik.http.services.webapi.loadbalancer.healthCheck.interval=10s"
      - "traefik.http.services.webapi.loadbalancer.healthCheck.timeout=3s"
      - "traefik.http.routers.webapi.service=webapi"
      - "traefik.http.routers.webapi.rule=Host(`${HORNET_HOST:?HORNET_HOST is missing}`) && PathPrefix(`/api`, `/mqtt`, `/health`)"
      - "traefik.http.routers.webapi.entrypoints=websecure"
      - "traefik.http.routers.webapi.tls=true"
      - "traefik.http.routers.webapi.tls.certresolver=myresolver"
    cap_drop:
      - ALL
    command: [ "--config", "/app/config/config.json" ]
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "${HORNET_DATA_DIR:-./data}/storage/${HORNET_NETWORK:-mainnet}:/app/storage"
      - "${HORNET_DATA_DIR:-./data}/snapshots/${HORNET_NETWORK:-mainnet}:/app/snapshots"
      - "${HORNET_DATA_DIR:-./data}/p2pstore/${HORNET_NETWORK:-mainnet}:/app/p2pstore"
      - "${HORNET_DATA_DIR:-./data}/config/config-${HORNET_NETWORK:-mainnet}.json:/app/config/config.json:ro"
    logging:
      driver: "json-file"
      options:
        max-size: "500m"

  ##################################################################
  #  Reverse Proxy and SSL                                         #
  ##################################################################

  traefik:
    image: traefik:v2.9.8
    container_name: iota-hornet.traefik
    restart: unless-stopped
    env_file:
      - .env
    command:
      - "--log.level=WARN"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.constraints=Label(`proxy.constraint`,`hornet-${HORNET_NETWORK:-mainnet}`)"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.transport.respondingTimeouts.readTimeout=10"
      - "--entrypoints.web.transport.respondingTimeouts.writeTimeout=10"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.transport.respondingTimeouts.readTimeout=10"
      - "--entrypoints.websecure.transport.respondingTimeouts.writeTimeout=10"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${ACME_EMAIL:-}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "${HORNET_HTTP_PORT:-80}:80/tcp"
      - "${HORNET_HTTPS_PORT:-443}:443/tcp"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "${HORNET_DATA_DIR:-./data}/letsencrypt:/letsencrypt"
      - "./assets/traefik:/etc/traefik/dynamic:ro"
      - "${HORNET_SSL_CERT:-./assets/traefik/certs/fake.cert}:/certs/domain.cert:ro"
      - "${HORNET_SSL_KEY:-./assets/traefik/certs/fake.key}:/certs/domain.key:ro"
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
