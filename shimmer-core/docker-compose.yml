version: '3'
services:

  iota-core:
    image: iotaledger/iota-core:${IOTA_CORE_VERSION:?IOTA_CORE_VERSION is missing}
    container_name: shimmer-iota-core
    restart: unless-stopped
    ulimits:
      nofile:
        soft: 16384
        hard: 16384
    stop_grace_period: 5m
    depends_on:
      traefik:
        condition: service_started
    tty: true
    working_dir: /app
    ports:
      - "${IOTA_CORE_GOSSIP_PORT:-15600}:${IOTA_CORE_GOSSIP_PORT:-15600}/tcp"
      - "${IOTA_CORE_AUTOPEERING_PORT:-14626}:${IOTA_CORE_AUTOPEERING_PORT:-14626}/udp"
    labels:
      - "traefik.enable=true"
      - "proxy.constraint=iota-core-${IOTA_CORE_NETWORK:-mainnet}"

      # api
      - "traefik.http.routers.iota-core-api.service=iota-core-api"
      - "traefik.http.routers.iota-core-api.rule=Host(`${IOTA_CORE_HOST:?IOTA_CORE_HOST is missing}`) && (Path(`/health`) || Path(`/api`) || PathPrefix(`/api`))"
      - "traefik.http.routers.iota-core-api.entrypoints=websecure"
      - "traefik.http.routers.iota-core-api.tls=true"
      - "traefik.http.routers.iota-core-api.tls.certresolver=myresolver"

      - "traefik.http.services.iota-core-api.loadbalancer.server.port=14265"
      - "traefik.http.services.iota-core-api.loadbalancer.healthCheck.path=/api/core/v3/info"
      - "traefik.http.services.iota-core-api.loadbalancer.healthCheck.interval=15s"
      - "traefik.http.services.iota-core-api.loadbalancer.healthCheck.timeout=5s"

      # dashboard
      - "traefik.http.routers.iota-core-app.service=iota-core-app"
      - "traefik.http.routers.iota-core-app.rule=Host(`${IOTA_CORE_HOST:?IOTA_CORE_HOST is missing}`)"
      - "traefik.http.routers.iota-core-app.entrypoints=websecure"
      - "traefik.http.routers.iota-core-app.tls=true"
      - "traefik.http.routers.iota-core-app.tls.certresolver=myresolver"

      - "traefik.http.services.iota-core-app.loadbalancer.server.port=8081"
      - "traefik.http.services.iota-core-app.loadbalancer.healthCheck.path=/"
      - "traefik.http.services.iota-core-app.loadbalancer.healthCheck.interval=10s"
      - "traefik.http.services.iota-core-app.loadbalancer.healthCheck.timeout=3s"

      - "traefik.http.routers.iota-core-app.middlewares=security-headers"

      # middlewares
      - "traefik.http.middlewares.security-headers.headers.accesscontrolallowmethods=GET,POST,PUT,DELETE,OPTIONS"
      - "traefik.http.middlewares.security-headers.headers.customResponseHeaders.Access-Control-Allow-Origin=https://${IOTA_CORE_HOST:?WASP_HOST is missing}:${IOTA_CORE_HTTPS_PORT:-443}"
      - "traefik.http.middlewares.security-headers.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.security-headers.headers.addvaryheader=true"
      - "traefik.http.middlewares.security-headers.headers.frameDeny=true"
      - "traefik.http.middlewares.security-headers.headers.contentTypeNosniff=true"
    cap_drop:
      - ALL
    command:
      - "--config=/app/config/config.json"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "${IOTA_CORE_DATA_DIR:-./data}/config/config-${IOTA_CORE_NETWORK:-mainnet}.json:/app/config/config.json:ro"
      - "${IOTA_CORE_DATA_DIR:-./data}/storage/${IOTA_CORE_NETWORK:-mainnet}:/app/storage"
#      - "${IOTA_CORE_DATA_DIR:-./data}/snapshots/${IOTA_CORE_NETWORK:-mainnet}:/app/snapshots"
      - "${IOTA_CORE_DATA_DIR:-./assets}/dlt-green.snapshot:/app/snapshots/snapshot.bin"
      - "${IOTA_CORE_DATA_DIR:-./data}/p2pstore/${IOTA_CORE_NETWORK:-mainnet}:/app/p2pstore"
    healthcheck:
      test: ["CMD", "/app/iota-core", "tools", "node-info"]
      interval: 10s
      timeout: 5s
      retries: 60
    logging:
      driver: "json-file"
      options:
        max-size: "500m"

  ##################################################################
  #  Reverse Proxy and SSL                                         #
  ##################################################################

  traefik:
    image: traefik:v2.9.8
    container_name: shimmer-iota-core.traefik
    restart: unless-stopped
    env_file:
      - .env
    command:
      - "--log.level=WARN"
      - "--metrics.prometheus=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.constraints=Label(`proxy.constraint`,`iota-core-${IOTA_CORE_NETWORK:-mainnet}`)"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.transport.respondingTimeouts.readTimeout=10"
      - "--entrypoints.web.transport.respondingTimeouts.writeTimeout=10"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.transport.respondingTimeouts.readTimeout=10"
      - "--entrypoints.websecure.transport.respondingTimeouts.writeTimeout=10"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${ACME_EMAIL:-}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "${IOTA_CORE_HTTP_PORT:-80}:80/tcp"
      - "${IOTA_CORE_HTTPS_PORT:-443}:443/tcp"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "${IOTA_CORE_DATA_DIR:-./data}/letsencrypt:/letsencrypt"
      - "./assets/traefik:/etc/traefik/dynamic:ro"
      - "${IOTA_CORE_SSL_CERT:-./assets/traefik/certs/fake.cert}:/certs/domain.cert:ro"
      - "${IOTA_CORE_SSL_KEY:-./assets/traefik/certs/fake.key}:/certs/domain.key:ro"
    logging:
      driver: "json-file"
      options:
        max-size: "200m"

  ##################################################################
  #  Monitoring                                                    #
  ##################################################################

  prometheus:
    image: prom/prometheus:latest
    container_name: shimmer-iota-core.prometheus
    stop_grace_period: 1m
    restart: unless-stopped
    depends_on:
      iota-core:
        condition: service_started
    user: "65532"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./assets/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ${IOTA_CORE_DATA_DIR:-./data}/prometheus/:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:9.5.6
    container_name: shimmer-iota-core.grafana
    restart: unless-stopped
    user: "65532"
    labels:
      - "proxy.constraint=iota-core-${IOTA_CORE_NETWORK:-mainnet}"
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`${IOTA_CORE_HOST:?IOTA_CORE_HOST is missing}`) && (Path(`/grafana`) || PathPrefix(`/grafana/`))"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    environment:
      - GF_SERVER_DOMAIN=${IOTA_CORE_HOST}
      - GF_SERVER_ROOT_URL=/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/provisioning/dashboards/local_dashboard.json
    volumes:
      - ./assets/grafana/:/etc/grafana/
      - ${IOTA_CORE_DATA_DIR:-./data}/grafana:/var/lib/grafana
    profiles:
      - monitoring

  ##################################################################
  #  INX Extensions                                                #
  ##################################################################

  inx-indexer:
    image: iotaledger/inx-indexer:${INX_INDEXER_VERSION:?INX_INDEXER_VERSION is missing}
    container_name: shimmer-iota-core.inx-indexer
    stop_grace_period: 5m
    restart: unless-stopped
    depends_on:
      iota-core:
        condition: service_healthy
    ulimits:
      nofile:
        soft: 16384
        hard: 16384
    command:
      - "--inx.address=iota-core:9029"
      - "--restAPI.bindAddress=inx-indexer:9091"

  inx-mqtt:
    image: iotaledger/inx-mqtt:${INX_MQTT_VERSION:?INX_MQTT_VERSION is missing}
    container_name: shimmer-iota-core.inx-mqtt
    stop_grace_period: 1m
    restart: unless-stopped
    depends_on:
      iota-core:
        condition: service_healthy
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
    command:
      - "--inx.address=iota-core:9029"
      - "--mqtt.websocket.bindAddress=inx-mqtt:1888"

  inx-blockissuer:
    image: iotaledger/inx-blockissuer:${INX_BLOCKISSUER_VERSION:?INX_BLOCKISSUER_VERSION is missing}
    container_name: shimmer-iota-core.inx-blockissuer
    stop_grace_period: 1m
    restart: unless-stopped
    depends_on:
      iota-core:
        condition: service_healthy
      inx-indexer:
        condition: service_started
    environment:
      - "BLOCKISSUER_PRV_KEY=432c624ca3260f910df35008d5c740593b222f1e196e6cdb8cd1ad080f0d4e33997be92a22b1933f36e26fba5f721756f95811d6b4ae21564197c2bfa4f28270"
    command: >
      --inx.address=iota-core:9029
      --restAPI.bindAddress=inx-blockissuer:9086
      --blockIssuer.accountAddress=rms1prkursay9fs2qjmfctamd6yxg9x8r3ry47786x0mvwek4qr9xd9d5c6gkun
      --blockIssuer.proofOfWork.targetTrailingZeros=5

  inx-validator:
    image: iotaledger/inx-validator:${INX_VALIDATOR_VERSION:?INX_VALIDATOR_VERSION is missing}
    container_name: shimmer-iota-core.inx-validator
    stop_grace_period: 1m
    restart: unless-stopped
    depends_on:
      iota-core:
        condition: service_started
    environment:
      - "VALIDATOR_PRV_KEY=443a988ea61797651217de1f4662d4d6da11fd78e67f94511453bf6576045a05293dc170d9a59474e6d81cfba7f7d924c09b25d7166bcfba606e53114d0a758b"
    command: >
      --logger.level=debug
      --inx.address=iota-core:9029
      --validator.ignoreBootstrapped=true
      --validator.accountAddress=rms1pzg8cqhfxqhq7pt37y8cs4v5u4kcc48lquy2k73ehsdhf5ukhya3y5rx2w6
      --validator.issueCandidacyPayload=${ISSUE_CANDIDACY_PAYLOAD_V1:-true}

networks:
  default:
    name: shimmer
    external: true
